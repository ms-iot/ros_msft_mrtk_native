trigger:
- master

jobs:
- job: Nugetbuild
  pool:
    vmImage: 'windows-2019'
  timeoutInMinutes: 240
  steps:
  - checkout: self
    submodules: recursive
  - task: CopyFiles@2
    inputs:
      targetFolder: '$(Build.StagingDirectory)\_'
  - task: UseDotNet@2
    displayName: 'Use dotnet sdk 3.x'
    inputs:
      version: 3.x
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific' # Options: current, specific
      project: 'mrtk_ros' # Required when source == Specific
      pipeline: 110 # Required when source == Specific
      buildVersionToDownload: 'latest' # Required when source == Specific# Options: latest, latestFromBranch, specific
      artifactName: 'ros2vcpkg'
  - script: |
      mkdir c:\opt\vcpkg
      7z x %System_ArtifactsDirectory%\ros2vcpkg\vcpkg.zip.001 -oc:\opt
    displayName: Initialize vcpkg
  - script: |
      call init.cmd
      call build.cmd
      cd src
      build.cmd
      cd ..
    displayName: Build ROS2 Components
    workingDirectory: '$(Build.StagingDirectory)\_'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.StagingDirectory)\_\target\log
      artifactName: 'ros2dotnet-log'
    condition: always()
  - task: NuGetCommand@2
    displayName: 'NuGet pack'
    inputs:
      command: pack
      basePath: $(Build.StagingDirectory)\_\nuget
      packagesToPack: $(Build.StagingDirectory)\_\nuget\Microsoft.ROS.MRTK.Eloquent.nuspec
      packDestination: '$(Build.ArtifactStagingDirectory)/nuget'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/nuget
      artifactName: 'ros2dotnet-nuget'
  - task: NuGetCommand@2
    displayName: 'NuGet push'
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)/nuget/*.nupkg'
      publishVstsFeed: $(ROSWinPublicFeedId)
      allowPackageConflicts: true
